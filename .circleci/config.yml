# Python CircleCI 2.0 configuration file
##
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2
jobs:
  test:
    docker:
      - image: openmcworkshop/paramak:dependencies_cq_master
    steps:
      - checkout
      - run:
          name: install
          command:
            python setup.py install
      - run:
          name: run utils tests
          command: 

            pytest tests/test_utils.py -v --cov=paramak --cov-report term --cov-report xml --junitxml=test-reports/junit.xml
      - run:
          name: run shape tests
          command: 

            pytest tests/test_Shape.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run Reactor tests
          command: 

            pytest tests/test_Reactor.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_shapes tests
          command: 

            pytest tests/test_parametric_shapes/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_components tests
          command: 

            pytest tests/test_parametric_components/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run example shape tests
          command: 

            pytest tests/test_example_shapes.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run example component tests
          command: 

            pytest tests/test_example_components.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml
      - run:
          name: run example reactor tests
          command: 

            pytest tests/test_example_reactors.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_reactors tests
          command: 

            pytest tests/test_parametric_reactors/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      # TODO once the open-source neutronics workflow is more stable include these tests
      # - run:
      #     name: run neutronics tests
      #     command: 

      #       pytest tests/test_parametric_neutronics/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - store_test_results:
          path: test-reports

      - run: bash <(curl -s https://codecov.io/bash)
  build-deploy:
    environment:
      IMAGE_NAME: openmcworkshop/paramak
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME .
        - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME


workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - build-deploy:
          requires:
            - test
          filters:
            branches:
              only: master